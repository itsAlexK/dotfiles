#!/bin/zsh

function twm {

    local command=$1

    if [[ "$command" =~ ^(start|stop|restart)$ ]]; then
        brew services "${command}" yabai
        brew services "${command}" skhd
    else
        echo "${command} is not a valid option"
    fi
}

function km {
    # https://rakhesh.com/mac/using-hidutil-to-map-macos-keyboard-keys/
    local command=$1

    if [[ "$command" = 'start' ]]; then
        hidutil property --set '{"UserKeyMapping":[

                    {
                    "HIDKeyboardModifierMappingSrc": 0x70000002A,
                    "HIDKeyboardModifierMappingDst": 0x7000000E3
                    },

                    {
                    "HIDKeyboardModifierMappingSrc": 0x70000004C,
                    "HIDKeyboardModifierMappingDst": 0x70000002C
                    },

                    {
                    "HIDKeyboardModifierMappingSrc": 0x70000004D,
                    "HIDKeyboardModifierMappingDst": 0x700000029
                    },

                    {
                    "HIDKeyboardModifierMappingSrc": 0x70000004A,
                    "HIDKeyboardModifierMappingDst": 0x7000000E2
                    },

                    {
                    "HIDKeyboardModifierMappingSrc": 0x70000002C,
                    "HIDKeyboardModifierMappingDst": 0x70000002A
                    }

                ]}'
    else
        hidutil property --set '{"UserKeyMapping":[]}'
    fi

}


function awscred {

    local user=S1
    local pass=S2

    aws configure set aws_access_key_id $user --profile cloud
    aws configure set aws_secret_access_key $pass --profile cloud
}

function wttr()
{
    # change Paris to your default location
    local request="wttr.in/${1-Toronto}"
    [ "$(tput cols)" -lt 125 ] && request+='?n'
    curl -H "Accept-Language: ${LANG%_*}" --compressed "$request"
}

function tabc() {
    local NAME=$1

    if [[ $NAME == 'production' ]]; then
        kitty @ set-colors background='#241200'
    elif [[ $NAME == 'staging' ]]; then
        kitty @ set-colors background='#1f1626'
    elif [[ $NAME == 'other' ]]; then
        kitty @ set-colors background='#323232'
    else
        kitty @ set-colors --reset
    fi

}

function tab-reset() {
    kitty @ set-colors --reset
}

function colorssh() {
    if [[ -n "$KITTY_WINDOW_ID" ]]; then
        trap "tab-reset" INT EXIT
        if [[ "$*" =~ "prod" ]]; then
            tabc production
        elif [[ "$*" =~ "stag" ]]; then
            tabc staging
        else
            tabc other
        fi
    fi
    /usr/bin/ssh $*
}

compdef colorssh=ssh
