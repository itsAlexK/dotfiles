#!/bin/zsh

function fzf_bat_exec() {
    local file=$1
    local line=$2
    local lines=$LINES

    # subtract 3 for the header
    declare -i center=$(( (lines - 3) / 2 ))

    if [ $line -lt $center ]; then
        center=$line
    fi
    start=$(( line - center ))
    end=$(( lines + start ))

    bat --color always --highlight-line $line --line-range $start:$end --paging never "$file"
}


function urlencode() {
  python3 -c 'import sys, urllib.parse; print(urllib.parse.quote(sys.argv[1]))' "$1"
}

function to_obsidian_url() {
    local file="$1"
    encoded_file=$(urlencode "$file")
    obsidian_url="obsidian://open?vault=notes&file=$encoded_file"
    echo "$obsidian_url"
}

function open_obsidian_from_file() {
    local file="$1"
    obsidian_open_url=$(to_obsidian_url "$file")

    if ! pgrep Obsidian >/dev/null
    then
      open -a 'Obsidian'
      sleep 1
    fi

    open "${obsidian_open_url}"
}

function obs() {
  INITIAL_QUERY=""
  RG_PREFIX="rg --column --line-number --color=always --smart-case "
  NOTES_DIR="$HOME/notes/notes/"

  if [ ! -d "$NOTES_DIR" ]; then
    echo "Notes directory not found: $NOTES_DIR"
    return 1
  fi

  pushd "$NOTES_DIR" > /dev/null || {
    echo "Failed to change to notes directory"
    return 1
  }
  trap "popd > /dev/null" INT EXIT

  file=$(FZF_DEFAULT_COMMAND="$RG_PREFIX '$INITIAL_QUERY'" \
    fzf --bind "change:reload:$RG_PREFIX {q} || true" \
        --bind "ctrl-e:execute:(nvim +{2} {1}) < /dev/tty > /dev/tty 2>&1" \
        --delimiter=: \
        --with-nth=1,4 \
        --ansi --disabled --query "$INITIAL_QUERY" \
        --height=100% --layout=reverse \
        --preview "bat --color always --highlight-line {2} --line-range {2}: --language markdown {1}" \
    | awk -F':' '{print $1}')

  if [ -n "$file" ] && [ -f "$file" ]; then
    # Get the relative path by removing the NOTES_DIR prefix
    relative_file=${file#"$NOTES_DIR"}
    # Remove leading slash if present
    relative_file=${relative_file#/}
    open_obsidian_from_file "$relative_file"
  elif [ -n "$file" ]; then
    echo "Selected file not found: $file"
    return 1
  fi
}
